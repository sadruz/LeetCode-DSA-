class Solution {
    vector<char> shiftToRight(vector<char> boxA){
        int i=boxA.size()-1, j=boxA.size()-1;
        while(j>=0){
            if(boxA[j]=='*'){
                i=j-1;
            }
            else if(boxA[j]=='#'){
                std::swap(boxA[j],boxA[i]);
                i--;
            }
            j--;
        }
        return boxA;
    }
public:
    vector<vector<char>> rotateTheBox(vector<vector<char>>& box) {
        int m=box.size(), n=box[0].size();
        vector<vector<char>> rotatedBox(n,vector<char>(m));
        int j=m-1;
        for(int i=0; i<m; i++){
            vector<char> shifted = shiftToRight(box[i]);
            for(int i=0; i<n; i++){
                rotatedBox[i][j] = shifted[i];
            }
            j--;
        }
        return rotatedBox;
    }
};

auto init = [](){
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);
    return 'c';
}();
